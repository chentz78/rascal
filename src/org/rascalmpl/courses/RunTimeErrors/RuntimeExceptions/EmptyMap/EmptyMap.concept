# Empty Map

.Synopsis
Illegal operation on an empty set.

.Syntax

.Types
`data RuntimeException = EmptyMap();`
       
.Usage
`import Exception;` (only needed when `EmptyMap` is used in `catch`)

.Details

.Description
Rascal provides many operations and functions on maps, see link:/Rascal#Values-Map[map values]
and link:/Libraries#Prelude-Map[map functions].
This error is generated when a function or operations cannot handle the empty map.

Remedies: 

*  Guard the function or operation with a test on the empty map (link:/Libraries#Map-isEmpty[isEmpty]) and 
  take alternative action in that case.
*  Catch the `EmptyMap` yourself, see link:/Rascal#Statements-TryCatch[try catch].

.Examples

Import the `Map` library and introduce `M` with an empty map as value:
[source,rascal-shell,error]
----
import Map;
M = ();
----
Trying to get an arbitrary value from it gives an error:
[source,rascal-shell,continue,error]
----
getOneFrom(M);
----
We can also catch the `EmptyMap` error. First import the Rascal exceptions (which are also included in `Prelude`)
and `IO`:
[source,rascal-shell,continue,error]
----
import Exception;
import IO;
try println(getOneFrom(M)); catch EmptyMap(): println("Cannot use getOneFrom on empty map");
----

.Benefits

.Pitfalls

