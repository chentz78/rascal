# Ambiguity

.Synopsis
Ambiguity found in parsed text. 

.Description
Rascal supports general context-free grammars and also provides
various mechanisms to disambiguate them.

This exception is thrown when, given a grammar and a sentence,
an ambiguity is found while parsing the sentence according to that grammar.

.Examples
First declare a very simple expression language that should
recognize expressions like `a`, `a+a`, `a+(a+a)`:
[source,rascal-shell]
----
syntax A = "a";
syntax E = A | "(" E ")" | E "+" E;
----
Next, import the ParseTree module that provides a `parse` function that we will use:
[source,rascal-shell,continue]
----
import ParseTree;
----
Entering a first expression goes well:
[source,rascal-shell,continue]
----
parse(#E, "a+a");
----
However, when becoming more ambitious, we get an exception:

[source,rascal-shell,continue,errors]
----
parse(#E, "a+a+a");
----
The conclusion is that there are two parses here: `a+(a+a)` and `(a+a)+a`, 
because we did forget to define the associativity of the `+` operator.
Let's fix this:

[source,rascal-shell]
----
syntax A = "a";
syntax E = A | "(" E ")" | left E "+" E;
import ParseTree;
parse(#E, "a+a+a");
----

Here are some pointers for further disambiguation help:

* link:/Rascal#Declarations-SyntaxDefinition[Syntax Definitions].
* link:/Rascal#SyntaxDefinition-Disambiguation[Disambiguation features].
