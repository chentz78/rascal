# Read Eval Print Loop (REPL)

.Synopsis
The Rascal Read Eval Print Loop (REPL)

.Description

RascalShell is first and foremost an interactive console to execute Rascal code, 
be it declarations, statements or expressions.

.Examples
Rascal code can be a trivial expression
[source,rascal-shell]
----
1+2
----
Or a more complex list comprehension:
[source,rascal-shell]
----
[ n * n | int n <- [0..10] ]
----
Or importing a file and using a function declared in it:
[source,rascal-shell]
----
import List;
size([ n * n | int n <- [0..10] ])
----
Another use is to declare variables
[source,rascal-shell]
----
int x = 2;
int y = 3;
----
and use them later on:
[source,rascal-shell,continue]
----
x * y
----

.Pitfalls
Rascal is quite demanding as far as the proper placement of semicolons (`;`)
is concerned.
The RascalShell is more permissive but at the end of a statement
there is still one required.